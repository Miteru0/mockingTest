name: CI Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-22.04  # Specify Ubuntu version explicitly to avoid surprises

    steps:
    - name: Check out the code
      uses: actions/checkout@v2

    # Set up JDK 17 (use your desired JDK version)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'temurin'  # Use the correct JDK distribution

    - name: Cache Maven dependencies
      uses: actions/cache@v2
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    - name: Build with Maven
      run: mvn clean install

    - name: Run tests
      run: mvn test

    - name: Deploy to Heroku
      if: success()  # Only deploy if tests pass
      run: |
        # Install Heroku CLI
        curl https://cli-assets.heroku.com/install.sh | sh
        # Authenticate using Heroku API key
        echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token
        # Configure Git to use Heroku's API key for authentication
        git config --global credential.helper store
        echo "https://heroku:${{ secrets.HEROKU_API_KEY }}@git.heroku.com" > ~/.git-credentials
        # Set up the Heroku remote if it's not already set
        git remote get-url heroku || git remote add heroku https://git.heroku.com/mockingtest.git
        # Push to Heroku (use 'main' or 'master' based on your branch)
        git push heroku master  # Use 'main' if that's your default branch
    
