name: Java CI with Maven

on:
  push:
    branches:
      - main  # Trigger deployment on push to the 'main' branch

jobs:
  build:
    runs-on: ubuntu-22.04  # Specify Ubuntu version explicitly to avoid surprises

    steps:
    # Check out the repository code
    - name: Checkout code
      uses: actions/checkout@v2

    # Set up JDK 17 (use your desired JDK version)
    - name: Set up JDK 17
      uses: actions/setup-java@v2
      with:
        java-version: '17'
        distribution: 'adoptopenjdk'  # Use the correct JDK distribution

    # Cache Maven dependencies to speed up build
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Run Maven build to compile and test
    - name: Build with Maven
      run: mvn clean install -DskipTests=true

    # Deploy to Heroku
    - name: Deploy to Heroku
      if: success()  # Only deploy if the build is successful
      run: |
        curl https://cli-assets.heroku.com/install.sh | sh  # Install Heroku CLI
        echo "${{ secrets.HEROKU_API_KEY }}" | heroku auth:token  # Authenticate using the Heroku API key
        heroku git:remote -a mockingtest  # Set Heroku app remote (replace 'mockingtest' with your app's name)
        git push heroku main  # Push to Heroku (replace 'main' with the correct branch)
